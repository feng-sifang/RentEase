# Generated by Django 4.1 on 2023-04-17 15:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('property_id', models.AutoField(primary_key=True, serialize=False)),
                ('property_type', models.CharField(max_length=20)),
                ('property_description', models.CharField(max_length=100)),
                ('property_city', models.CharField(max_length=20)),
                ('property_state', models.CharField(max_length=20)),
                ('property_address', models.CharField(max_length=100)),
                ('property_price', models.FloatField()),
                ('property_availability', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_email', models.CharField(max_length=20)),
                ('user_last_name', models.CharField(max_length=20)),
                ('user_first_name', models.CharField(max_length=20)),
                ('user_type', models.CharField(max_length=10)),
                ('user_password', models.CharField(max_length=20)),
                ('user_total_cost', models.DecimalField(decimal_places=2, max_digits=20)),
            ],
        ),
        migrations.CreateModel(
            name='Agents',
            fields=[
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dj_backend.users')),
                ('agent_job_title', models.CharField(max_length=20)),
                ('agent_company', models.CharField(max_length=20)),
                ('agent_contact_information', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('property_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dj_backend.property')),
                ('num_of_rooms', models.IntegerField()),
                ('building_type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CommercialBuilding',
            fields=[
                ('property_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dj_backend.property')),
                ('business_type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('property_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dj_backend.property')),
                ('num_of_rooms', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Land',
            fields=[
                ('property_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dj_backend.property')),
                ('land_size', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Renters',
            fields=[
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dj_backend.users')),
                ('renter_rental_preferences', models.CharField(max_length=100)),
                ('renter_desired_move_in_date', models.DateField()),
                ('renter_preferred_location', models.CharField(max_length=100)),
                ('renter_budget', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='VacationHome',
            fields=[
                ('property_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dj_backend.property')),
                ('characteristics', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('user_address_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_address_street', models.CharField(max_length=20)),
                ('user_address_city', models.CharField(max_length=20)),
                ('user_address_state', models.CharField(max_length=20)),
                ('user_address_zip', models.IntegerField()),
                ('user_address_country', models.CharField(max_length=20)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_backend.users')),
            ],
        ),
        migrations.CreateModel(
            name='RewardRecord',
            fields=[
                ('reward_record_id', models.AutoField(primary_key=True, serialize=False)),
                ('property_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_backend.property')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_backend.users')),
            ],
        ),
        migrations.AddField(
            model_name='property',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_backend.users'),
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('neighborhood_id', models.AutoField(primary_key=True, serialize=False)),
                ('crime_rate', models.FloatField()),
                ('nearby_schools', models.CharField(max_length=100)),
                ('property_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_backend.property')),
            ],
        ),
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('credit_card_id', models.AutoField(primary_key=True, serialize=False)),
                ('credit_card_number', models.CharField(max_length=20)),
                ('credit_card_holder_name', models.CharField(max_length=20)),
                ('credit_card_expiry_date', models.DateField()),
                ('credit_card_cvv', models.IntegerField()),
                ('credit_card_street', models.CharField(max_length=20)),
                ('credit_card_city', models.CharField(max_length=20)),
                ('credit_card_zip', models.IntegerField()),
                ('credit_card_country', models.CharField(max_length=20)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_backend.users')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_start_date', models.DateField()),
                ('booking_end_date', models.DateField()),
                ('booking_total_cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('credit_card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_backend.creditcard')),
                ('property_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_backend.property')),
            ],
        ),
        migrations.AddConstraint(
            model_name='useraddress',
            constraint=models.UniqueConstraint(fields=('user_address_id', 'user_id'), name='unique_user_address'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dj_backend.renters'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=models.UniqueConstraint(fields=('user_id', 'property_id', 'credit_card_id'), name='unique_booking'),
        ),
    ]
